{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { saveAs } from 'file-saver';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { ViewBillProductsComponent } from '../dialog/view-bill-products/view-bill-products.component';\nexport let ViewBillUserComponent = class ViewBillUserComponent {\n  constructor(billService, ngxService, dialog, snackBar, router) {\n    this.billService = billService;\n    this.ngxService = ngxService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.displayedColumns = ['name', 'email', 'contactNumber', 'paymentMethod', 'total', 'view'];\n  }\n  ngOnInit() {\n    this.ngxService.start();\n    this.tableData();\n  }\n  tableData() {\n    this.billService.getBills().subscribe(resp => {\n      this.ngxService.stop();\n      this.dataSource = new MatTableDataSource(resp.data);\n    }, error => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  handleViewAction(value) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      data: value\n    };\n    dialogConfig.width = '100%';\n    const dialogRef = this.dialog.open(ViewBillProductsComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n  }\n  downloadReportAction(value) {\n    this.ngxService.start();\n    let data = {\n      name: value.name,\n      email: value.email,\n      uuid: value.uuid,\n      contactNumber: value.contactNumber,\n      paymentMethod: value.paymentMethod,\n      totalAmount: value.total,\n      productDetails: value.productDetails\n    };\n    this.billService.getPDF(data).subscribe(resp => {\n      saveAs(resp, value.uuid + '.pdf');\n      this.ngxService.stop();\n    });\n  }\n  handleDeleteAction(value) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete ' + value.name + ' bill'\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(response => {\n      this.ngxService.start();\n      this.deleteProduct(value.id);\n      dialogRef.close();\n    });\n  }\n  deleteProduct(id) {\n    this.billService.delete(id).subscribe(resp => {\n      this.ngxService.stop();\n      this.tableData();\n      this.responseMessage = resp?.message;\n      this.snackBar.openSnackBar(this.responseMessage, 'success');\n    }, error => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n};\nViewBillUserComponent = __decorate([Component({\n  selector: 'app-view-bill-user',\n  templateUrl: './view-bill-user.component.html',\n  styleUrls: ['./view-bill-user.component.scss']\n})], ViewBillUserComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}