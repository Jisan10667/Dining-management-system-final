{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { CategoryComponent } from '../dialog/category/category.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/category.service\";\nimport * as i2 from \"ngx-ui-loader\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/services/snackbar.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/flex-layout/flex\";\nfunction ManageCategoryComponent_mat_error_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageCategoryComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageCategoryComponent_mat_error_8_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.categoryForm.controls.name.errors.required);\n  }\n}\nexport let ManageCategoryComponent = /*#__PURE__*/(() => {\n  class ManageCategoryComponent {\n    constructor(categoryService, ngxService, dialog, snackBar, router) {\n      this.categoryService = categoryService;\n      this.ngxService = ngxService;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.displayedColumns = ['name', 'edit'];\n    }\n    ngOnInit() {\n      this.ngxService.start();\n      this.tableData();\n    }\n    tableData() {\n      this.categoryService.getCategories().subscribe(resp => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(resp.data);\n        console.log(resp);\n      }, error => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n    handleAddAction() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = {\n        action: 'Add'\n      };\n      dialogConfig.width = '850px';\n      const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\n      this.router.events.subscribe(() => {\n        dialogRef.close();\n      });\n      const sub = dialogRef.componentInstance.onAddCategory.subscribe(resp => {\n        this.tableData();\n      });\n    }\n    handleEditAction(value) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = {\n        action: 'Edit',\n        data: value\n      };\n      dialogConfig.width = '850px';\n      const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\n      this.router.events.subscribe(() => {\n        dialogRef.close();\n      });\n      const sub = dialogRef.componentInstance.onEditCategory.subscribe(resp => {\n        this.tableData();\n      });\n    }\n    static #_ = this.ɵfac = function ManageCategoryComponent_Factory(t) {\n      return new (t || ManageCategoryComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.NgxUiLoaderService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ManageCategoryComponent,\n      selectors: [[\"app-manage-category\"]],\n      decls: 19,\n      vars: 2,\n      consts: [[1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"fxLayout\", \"row wrap\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"image\"], [\"matInput\", \"\", \"formControlName\", \"description\"]],\n      template: function ManageCategoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-dialog-content\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"mat-form-field\", 4)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"\\u09A8\\u09BE\\u09AE\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵtemplate(8, ManageCategoryComponent_mat_error_8_Template, 2, 1, \"mat-error\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"mat-form-field\", 4)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"\\u099B\\u09AC\\u09BF (Image)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 3)(15, \"mat-form-field\", 4)(16, \"mat-label\");\n          i0.ɵɵtext(17, \"\\u09AC\\u09B0\\u09CD\\u09A3\\u09A8\\u09BE (Description)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"textarea\", 8);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.categoryForm.controls.name.touched && ctx.categoryForm.controls.name.invalid);\n        }\n      },\n      dependencies: [i6.NgIf, i3.MatDialogContent, i7.MatFormField, i7.MatLabel, i7.MatError, i8.MatInput, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.RequiredValidator, i9.FormGroupDirective, i9.FormControlName, i10.DefaultLayoutDirective, i10.DefaultFlexDirective],\n      styles: [\".float-right[_ngcontent-%COMP%]{float:right}mat-card[_ngcontent-%COMP%]{padding:20px}.responsive_table[_ngcontent-%COMP%]{margin-top:5px;width:105vw;height:104vh;overflow:auto}table[_ngcontent-%COMP%]{width:20%;height:20%}\"]\n    });\n  }\n  return ManageCategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}