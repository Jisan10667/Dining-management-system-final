{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { ProductComponent } from '../dialog/product/product.component';\nexport let ManageProductComponent = class ManageProductComponent {\n  constructor(productService, ngxService, dialog, snackBar, router) {\n    this.productService = productService;\n    this.ngxService = ngxService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.displayedColumns = ['নাম', 'কোন বিভাগের', 'বিবরণ', 'মূল্য'];\n  }\n  ngOnInit() {\n    this.ngxService.start();\n    this.tableData();\n  }\n  tableData() {\n    this.productService.getProducts().subscribe(resp => {\n      this.ngxService.stop();\n      this.dataSource = new MatTableDataSource(resp.data);\n    }, error => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  handleAddAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Add'\n    };\n    dialogConfig.width = '850px';\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n    const sub = dialogRef.componentInstance.onAddCategory.subscribe(resp => {\n      this.tableData();\n    });\n  }\n  handleEditAction(value) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Edit',\n      data: value\n    };\n    dialogConfig.width = '850px';\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n    const sub = dialogRef.componentInstance.onEditCategory.subscribe(resp => {\n      this.tableData();\n    });\n  }\n  handleDeleteAction(value) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete ' + value.name + ' product'\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(resp => {\n      this.ngxService.start();\n      this.deleteProduct(value.id);\n      dialogRef.close();\n    });\n  }\n  deleteProduct(id) {\n    this.productService.delete(id).subscribe(resp => {\n      this.ngxService.stop();\n      this.tableData();\n      this.responseMessage = resp?.message;\n      this.snackBar.openSnackBar(this.responseMessage, 'success');\n    }, error => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  onChange(status, id) {\n    let data = {\n      status: status.toString(),\n      id\n    };\n    this.productService.updateStatus(data).subscribe(resp => {\n      this.ngxService.stop();\n      this.responseMessage = resp?.message;\n      this.snackBar.openSnackBar(this.responseMessage, 'success');\n    }, error => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n};\nManageProductComponent = __decorate([Component({\n  selector: 'app-manage-product',\n  templateUrl: './manage-product.component.html',\n  styleUrls: ['./manage-product.component.scss']\n})], ManageProductComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}