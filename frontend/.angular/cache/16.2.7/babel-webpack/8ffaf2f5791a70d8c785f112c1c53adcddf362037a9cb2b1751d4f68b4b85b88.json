{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as jwt from 'jsonwebtoken';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BillUserService = /*#__PURE__*/(() => {\n  class BillUserService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.apiURL;\n      this.jsonHeader = {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      };\n    }\n    getBills() {\n      const token = localStorage.getItem('token'); // Adjust this to your storage method\n      const decodedToken = jwt.decode(token);\n      const userEmail = decodedToken.email;\n      return this.http.get(`${this.url}/bill/getUserBills`);\n    }\n    generateReport(data) {\n      return this.http.post(`${this.url}/bill/generateReport`, data, this.jsonHeader);\n    }\n    getPDF(data) {\n      return this.http.post(`${this.url}/bill/getPDF`, data, {\n        responseType: 'blob'\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${this.url}/bill/delete/${id}`, this.jsonHeader);\n    }\n    static #_ = this.ɵfac = function BillUserService_Factory(t) {\n      return new (t || BillUserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BillUserService,\n      factory: BillUserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return BillUserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}