{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/category.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/services/snackbar.service\";\nimport * as i5 from \"@angular/material/button\";\nexport let CategoryComponent = /*#__PURE__*/(() => {\n  class CategoryComponent {\n    constructor(dialogData, fb, categoryService, dialogRef, snackBar) {\n      this.dialogData = dialogData;\n      this.fb = fb;\n      this.categoryService = categoryService;\n      this.dialogRef = dialogRef;\n      this.snackBar = snackBar;\n      this.onAddCategory = new EventEmitter();\n      this.onEditCategory = new EventEmitter();\n      this.categoryForm = FormGroup;\n      this.dialogAction = 'Add';\n      this.action = 'Add';\n    }\n    ngOnInit() {\n      this.categoryForm = this.fb.group({\n        name: [null, [Validators.required]],\n        imageURL: [null]\n      });\n      if (this.dialogData.action === 'Edit') {\n        this.dialogAction = 'Edit';\n        this.action = 'Update';\n        this.categoryForm.patchValue(this.dialogData.data);\n      }\n    }\n    handleSubmit() {\n      if (this.dialogAction === 'Edit') {\n        this.edit();\n      } else {\n        this.add();\n      }\n    }\n    add() {\n      let formData = this.categoryForm.value;\n      let data = {\n        name: formData.name,\n        image: formData.image,\n        description: formData.description\n      };\n      this.categoryService.add(data).subscribe(resp => {\n        this.dialogRef.close();\n        this.onAddCategory.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      }, error => {\n        this.dialogRef.close();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    edit() {\n      let formData = this.categoryForm.value;\n      let data = {\n        id: this.dialogData.data.id,\n        name: formData.name,\n        image: formData.image,\n        description: formData.description\n      };\n      this.categoryService.update(data).subscribe(resp => {\n        this.dialogRef.close();\n        this.onEditCategory.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      }, error => {\n        this.dialogRef.close();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    static #_ = this.ɵfac = function CategoryComponent_Factory(t) {\n      return new (t || CategoryComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.SnackbarService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryComponent,\n      selectors: [[\"app-category\"]],\n      decls: 6,\n      vars: 2,\n      consts: [[\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-dialog-close\", \"\"]],\n      template: function CategoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtext(0, \"https://www.licious.in/blog/wp-content/uploads/2020/12/Hyderabadi-chicken-Biryani.jpg \");\n          i0.ɵɵelementStart(1, \"mat-dialog-actions\", 0)(2, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function CategoryComponent_Template_button_click_2_listener() {\n            return ctx.handleSubmit();\n          });\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵtext(5, \" Close \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !(ctx.categoryForm.valid && ctx.categoryForm.dirty));\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.action, \" \");\n        }\n      },\n      dependencies: [i5.MatButton, i3.MatDialogClose, i3.MatDialogActions]\n    });\n  }\n  return CategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}