{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nexport let ProductComponent = class ProductComponent {\n  constructor(dialogData, fb, productService, categoryService, dialogRef, snackBar) {\n    this.dialogData = dialogData;\n    this.fb = fb;\n    this.productService = productService;\n    this.categoryService = categoryService;\n    this.dialogRef = dialogRef;\n    this.snackBar = snackBar;\n    this.onAddCategory = new EventEmitter();\n    this.onEditCategory = new EventEmitter();\n    this.productForm = FormGroup;\n    this.dialogAction = 'Add';\n    this.action = 'Add';\n    this.categories = [];\n  }\n  ngOnInit() {\n    this.productForm = this.fb.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n      categoryId: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      imageURL: [null],\n      description: [null, [Validators.required]]\n    });\n    if (this.dialogData.action === 'Edit') {\n      this.dialogAction = 'Edit';\n      this.action = 'Update';\n      this.productForm.patchValue(this.dialogData.data);\n    }\n    this.getCategories();\n  }\n  getCategories() {\n    this.categoryService.getCategories().subscribe(resp => {\n      this.categories = resp.data;\n    }, error => {\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  handleSubmit() {\n    if (this.dialogAction === 'Edit') {\n      this.edit();\n    } else if (this.dialogAction === 'Add') {\n      this.add();\n    }\n  }\n  add() {\n    let formData = this.productForm.value;\n    let data = {\n      name: formData.name,\n      categoryID: formData.categoryId,\n      price: formData.price,\n      description: formData.description,\n      imageURL: formData.imageURL\n    };\n    this.productService.add(data).subscribe(resp => {\n      this.dialogRef.close();\n      this.onAddCategory.emit();\n      this.responseMessage = resp.message;\n      this.snackBar.openSnackBar(this.responseMessage, 'success');\n    }, error => {\n      this.dialogRef.close();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  edit() {\n    let formData = this.productForm.value;\n    let data = {\n      id: this.dialogData.data.id,\n      name: formData.name,\n      categoryID: formData.categoryId,\n      price: formData.price,\n      description: formData.description,\n      imageURL: formData.imageURL\n    };\n    this.productService.update(data).subscribe(resp => {\n      this.dialogRef.close();\n      this.onEditCategory.emit();\n      this.responseMessage = resp.message;\n      this.snackBar.openSnackBar(this.responseMessage, 'success');\n    }, error => {\n      this.dialogRef.close();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  delete() {}\n};\nProductComponent = __decorate([Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n}), __param(0, Inject(MAT_DIALOG_DATA))], ProductComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}